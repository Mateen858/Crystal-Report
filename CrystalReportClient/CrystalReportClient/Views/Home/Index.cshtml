@model IEnumerable<CrystalReportClient.Models.Employee>
@{
    ViewBag.Title = "Home Page";

}

@*<div class="jumbotron">
        <h1>ASP.NET</h1>
        <p class="lead">ASP.NET is a free web framework for building great Web sites and Web applications using HTML, CSS and JavaScript.</p>
        <p><a href="https://asp.net" class="btn btn-primary btn-lg">Learn more &raquo;</a></p>
    </div>

    <div class="row">
        <div class="col-md-4">
            <h2>Getting started</h2>
            <p>
                ASP.NET MVC gives you a powerful, patterns-based way to build dynamic websites that
                enables a clean separation of concerns and gives you full control over markup
                for enjoyable, agile development.
            </p>
            <p><a class="btn btn-default" href="https://go.microsoft.com/fwlink/?LinkId=301865">Learn more &raquo;</a></p>
        </div>
        <div class="col-md-4">
            <h2>Get more libraries</h2>
            <p>NuGet is a free Visual Studio extension that makes it easy to add, remove, and update libraries and tools in Visual Studio projects.</p>
            <p><a class="btn btn-default" href="https://go.microsoft.com/fwlink/?LinkId=301866">Learn more &raquo;</a></p>
        </div>
        <div class="col-md-4">
            <h2>Web Hosting</h2>
            <p>You can easily find a web hosting company that offers the right mix of features and price for your applications.</p>
            <p><a class="btn btn-default" href="https://go.microsoft.com/fwlink/?LinkId=301867">Learn more &raquo;</a></p>
        </div>
    </div>*@


<div class="container" style="margin-top:30px">
    <div class="row">
        <div class="col-md-12">
            <button class="btn btn-success" id="generateReport">Generate Report</button>
        </div>
    </div>
    <div class="row" style="margin-top:10px">
        <div class="col-md-12">
            <table class="table table-bordered">
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Id)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.FirstName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.LastName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.DateofBirth)

                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Salary)
                    </th>
                </tr>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>

                            @Html.DisplayFor(model => item.Id)
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.FirstName)
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.LastName)
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.DateofBirth)
                            @*@Html.FormatValue("yyy-MM-dd", item.DateofBirth.ToString("yyy-MM-dd"))*@
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.Salary)
                        </td>
                    </tr>
                }

            </table>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <iframe src="" height="800" width="800" class="iframe-report-pdf"></iframe>

        </div>

    </div>
</div>


<script src="~/Scripts/jquery-3.3.1.js"></script>
<script src="~/Scripts/jquery.base64.js"></script>
<script>
    $(function () {

        $("#generateReport").click(function () {
            alert("button is clicked");
            $.ajax({
                method: "GET",
                url: "http://localhost:50909/api/Employee/GetReport",
                datatype: "json",
                success: function (operation) {
                    var decoded = window.atob(operation.response);
                    alert(decoded);
                    //console.log(operation);
                    //alert(operation);
                    //var decoded = $.base64().decode(operation.response);
                    //var pdfBase64 = Ext.decode(operation.response.responseText, true).data;
                    //if (pdfBase64) {
                    //    if (!Ext.isIE && !Ext.isEdge && !btn.isXLS) {
                    //        document.querySelector(".iframe-report-pdf").src = "data:application/pdf;base64," + pdfBase64;
                    //    } else {
                    //        var type = (btn.isXLS ? 'application/xlsx' : 'application/pdf');
                    //        var filename = (btn.report || btn.text) + (btn.isXLS ? '.xls' : '.pdf');

                    //        Ext.Download(Ext.B64ToBlob(pdfBase64, type), filename, type);
                    //    }
                    //}
                },
                error: function () {
                    alert("error");
                }
            });


        });



    });
</script>